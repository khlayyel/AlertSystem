// <auto-generated />
using System;
using AlertSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlertSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251013142135_AddMoreTestUsers")]
    partial class AddMoreTestUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlertSystem.Models.Entities.AlertType", b =>
                {
                    b.Property<int>("AlertTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlertTypeId"));

                    b.Property<string>("AlertTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AlertType");

                    b.HasKey("AlertTypeId");

                    b.ToTable("AlertType", (string)null);
                });

            modelBuilder.Entity("AlertSystem.Models.Entities.Alerte", b =>
                {
                    b.Property<int>("AlerteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlerteId"));

                    b.Property<int>("AlertTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("AppId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreationAlerte")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLecture")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAlerte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EtatAlerteId")
                        .HasColumnType("int");

                    b.Property<int>("ExpedTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpediteurId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RappelSuivant")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutId")
                        .HasColumnType("int");

                    b.Property<string>("TitreAlerte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("destinataireMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("destinatairedesktop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("destinatairenum")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AlerteId");

                    b.HasIndex("AlertTypeId");

                    b.HasIndex("EtatAlerteId");

                    b.HasIndex("ExpedTypeId");

                    b.HasIndex("StatutId");

                    b.ToTable("Alerte", (string)null);
                });

            modelBuilder.Entity("AlertSystem.Models.Entities.ApiClient", b =>
                {
                    b.Property<int>("ApiClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApiClientId"));

                    b.Property<string>("ApiKeyHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RateLimitPerMinute")
                        .HasColumnType("int");

                    b.HasKey("ApiClientId");

                    b.ToTable("ApiClients");
                });

            modelBuilder.Entity("AlertSystem.Models.Entities.Destinataire", b =>
                {
                    b.Property<int>("DestinataireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DestinataireId"));

                    b.Property<int>("AlerteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateLecture")
                        .HasColumnType("datetime2");

                    b.Property<string>("EtatAlerte")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DestinataireId");

                    b.HasIndex("AlerteId");

                    b.ToTable("Destinataire", (string)null);
                });

            modelBuilder.Entity("AlertSystem.Models.Entities.Etat", b =>
                {
                    b.Property<int>("EtatAlerteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EtatAlerteId"));

                    b.Property<string>("EtatAlerteName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EtatAlerte");

                    b.HasKey("EtatAlerteId");

                    b.ToTable("Etat", (string)null);
                });

            modelBuilder.Entity("AlertSystem.Models.Entities.ExpedType", b =>
                {
                    b.Property<int>("ExpedTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpedTypeId"));

                    b.Property<string>("ExpedTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExpedType");

                    b.HasKey("ExpedTypeId");

                    b.ToTable("ExpedType", (string)null);
                });

            modelBuilder.Entity("AlertSystem.Models.Entities.RappelSuivant", b =>
                {
                    b.Property<int>("RappelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RappelId"));

                    b.Property<int>("AlerteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateRappel")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatutRappel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tentative")
                        .HasColumnType("int");

                    b.HasKey("RappelId");

                    b.HasIndex("AlerteId");

                    b.ToTable("RappelSuivant", (string)null);
                });

            modelBuilder.Entity("AlertSystem.Models.Entities.Statut", b =>
                {
                    b.Property<int>("StatutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatutId"));

                    b.Property<string>("StatutName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Statut");

                    b.HasKey("StatutId");

                    b.ToTable("Statut", (string)null);
                });

            modelBuilder.Entity("AlertSystem.Models.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DesktopDeviceToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WhatsAppNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("AlertSystem.Models.Entities.WebPushSubscription", b =>
                {
                    b.Property<int>("WebPushSubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WebPushSubscriptionId"));

                    b.Property<string>("Auth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endpoint")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("P256dh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("WebPushSubscriptionId");

                    b.HasIndex("UserId", "Endpoint")
                        .IsUnique();

                    b.ToTable("WebPushSubscriptions", (string)null);
                });

            modelBuilder.Entity("AlertSystem.Models.Entities.Alerte", b =>
                {
                    b.HasOne("AlertSystem.Models.Entities.AlertType", "AlertType")
                        .WithMany()
                        .HasForeignKey("AlertTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlertSystem.Models.Entities.Etat", "Etat")
                        .WithMany()
                        .HasForeignKey("EtatAlerteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlertSystem.Models.Entities.ExpedType", "ExpedType")
                        .WithMany()
                        .HasForeignKey("ExpedTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlertSystem.Models.Entities.Statut", "Statut")
                        .WithMany()
                        .HasForeignKey("StatutId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AlertType");

                    b.Navigation("Etat");

                    b.Navigation("ExpedType");

                    b.Navigation("Statut");
                });

            modelBuilder.Entity("AlertSystem.Models.Entities.Destinataire", b =>
                {
                    b.HasOne("AlertSystem.Models.Entities.Alerte", "Alerte")
                        .WithMany("Destinataires")
                        .HasForeignKey("AlerteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alerte");
                });

            modelBuilder.Entity("AlertSystem.Models.Entities.RappelSuivant", b =>
                {
                    b.HasOne("AlertSystem.Models.Entities.Alerte", "Alerte")
                        .WithMany("Rappels")
                        .HasForeignKey("AlerteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alerte");
                });

            modelBuilder.Entity("AlertSystem.Models.Entities.Alerte", b =>
                {
                    b.Navigation("Destinataires");

                    b.Navigation("Rappels");
                });
#pragma warning restore 612, 618
        }
    }
}
