-- D√âMONSTRATION COMPL√àTE DU SYST√àME D'ENVOI AUTOMATIQUE
-- Ce script montre comment cr√©er diff√©rents types d'alertes qui seront automatiquement envoy√©es

PRINT 'üöÄ === D√âMONSTRATION SYST√àME ENVOI AUTOMATIQUE === üöÄ';
PRINT '';
PRINT 'Ce script va cr√©er 3 types d''alertes diff√©rentes pour d√©montrer le syst√®me :';
PRINT '1. Alerte URGENTE (avec rappel automatique)';
PRINT '2. Alerte INFORMATION (sans rappel)';
PRINT '3. Alerte MAINTENANCE (notification de service)';
PRINT '';

-- V√©rifier que l'application est d√©marr√©e
PRINT '‚ö†Ô∏è  IMPORTANT: Assurez-vous que AlertSystem est d√©marr√© sur http://localhost:5000';
PRINT '';

-- Afficher les utilisateurs qui recevront les alertes
PRINT 'üë• Utilisateurs qui recevront les alertes :';
SELECT 
    UserId,
    FullName,
    Email,
    PhoneNumber,
    CASE WHEN DesktopDeviceToken IS NOT NULL THEN 'Oui' ELSE 'Non' END as WebPush
FROM Users 
WHERE IsActive = 1
ORDER BY UserId;

DECLARE @UserCount INT = (SELECT COUNT(*) FROM Users WHERE IsActive = 1);
PRINT 'Total : ' + CAST(@UserCount AS VARCHAR(10)) + ' utilisateurs actifs';
PRINT '';

-- =====================================
-- 1. ALERTE URGENTE (Obligatoire avec rappel)
-- =====================================
PRINT 'üö® Cr√©ation d''une alerte URGENTE...';

INSERT INTO Alerte (
    AlertTypeId,        -- 1 = acquittementN√©cessaire (avec rappel)
    ExpedTypeId,        -- 1 = Humain
    TitreAlerte,
    DescriptionAlerte,
    DateCreationAlerte,
    StatutId,           -- 1 = En Cours
    EtatAlerteId,       -- 2 = Non Lu
    AppId
) VALUES (
    1,                  -- Obligatoire avec rappel
    1,                  -- Humain
    'üö® URGENCE - Intervention Requise',
    'ALERTE CRITIQUE : Un probl√®me majeur a √©t√© d√©tect√© sur le syst√®me principal. Une intervention imm√©diate est requise. Merci de confirmer la r√©ception de cette alerte et de prendre les mesures n√©cessaires. Temps de r√©ponse attendu : 15 minutes maximum.',
    GETDATE(),
    1,                  -- En Cours
    2,                  -- Non Lu
    1                   -- AppId
);

DECLARE @AlerteUrgente INT = SCOPE_IDENTITY();
PRINT 'Alerte URGENTE cr√©√©e avec l''ID : ' + CAST(@AlerteUrgente AS VARCHAR(10));
PRINT 'Type : Obligatoire (rappel automatique dans 1 heure)';
PRINT '';

WAITFOR DELAY '00:00:02'; -- Attendre 2 secondes

-- =====================================
-- 2. ALERTE INFORMATION (Sans rappel)
-- =====================================
PRINT 'üì¢ Cr√©ation d''une alerte INFORMATION...';

INSERT INTO Alerte (
    AlertTypeId,        -- 2 = acquittementNonN√©cessaire (sans rappel)
    ExpedTypeId,        -- 2 = Service
    TitreAlerte,
    DescriptionAlerte,
    DateCreationAlerte,
    StatutId,           -- 1 = En Cours
    EtatAlerteId,       -- 2 = Non Lu
    AppId
) VALUES (
    2,                  -- Information sans rappel
    2,                  -- Service
    'üì¢ Information - Nouvelle Fonctionnalit√©',
    'INFORMATION : Une nouvelle fonctionnalit√© d''envoi automatique d''alertes a √©t√© d√©ploy√©e avec succ√®s. Vous pouvez maintenant cr√©er des alertes directement via des requ√™tes SQL et elles seront automatiquement envoy√©es √† tous les utilisateurs actifs. Cette notification est √† titre informatif uniquement.',
    GETDATE(),
    1,                  -- En Cours
    2,                  -- Non Lu
    1                   -- AppId
);

DECLARE @AlerteInfo INT = SCOPE_IDENTITY();
PRINT 'Alerte INFORMATION cr√©√©e avec l''ID : ' + CAST(@AlerteInfo AS VARCHAR(10));
PRINT 'Type : Information (pas de rappel)';
PRINT '';

WAITFOR DELAY '00:00:02'; -- Attendre 2 secondes

-- =====================================
-- 3. ALERTE MAINTENANCE (Notification de service)
-- =====================================
PRINT 'üîß Cr√©ation d''une alerte MAINTENANCE...';

INSERT INTO Alerte (
    AlertTypeId,        -- 2 = acquittementNonN√©cessaire
    ExpedTypeId,        -- 2 = Service
    TitreAlerte,
    DescriptionAlerte,
    DateCreationAlerte,
    StatutId,           -- 1 = En Cours
    EtatAlerteId,       -- 2 = Non Lu
    AppId
) VALUES (
    2,                  -- Information
    2,                  -- Service
    'üîß Maintenance Programm√©e - ' + FORMAT(DATEADD(DAY, 1, GETDATE()), 'dd/MM/yyyy'),
    'MAINTENANCE PROGRAMM√âE : Une maintenance du syst√®me AlertSystem est pr√©vue demain soir de 22h00 √† 02h00. Pendant cette p√©riode, le service pourra √™tre temporairement indisponible. Aucune action n''est requise de votre part. Merci de votre compr√©hension.',
    GETDATE(),
    1,                  -- En Cours
    2,                  -- Non Lu
    1                   -- AppId
);

DECLARE @AlerteMaintenance INT = SCOPE_IDENTITY();
PRINT 'Alerte MAINTENANCE cr√©√©e avec l''ID : ' + CAST(@AlerteMaintenance AS VARCHAR(10));
PRINT 'Type : Notification de service';
PRINT '';

-- =====================================
-- V√âRIFICATION DES R√âSULTATS
-- =====================================
PRINT 'üìä Attente de la fin du traitement des triggers...';
WAITFOR DELAY '00:00:03'; -- Attendre 3 secondes

PRINT 'üìä R√âSUM√â DES ALERTES CR√â√âES :';
SELECT 
    a.AlerteId,
    a.TitreAlerte,
    at.AlertType,
    et.ExpedType,
    a.DateCreationAlerte,
    COUNT(h.DestinataireId) as NombreDestinataires
FROM Alerte a
LEFT JOIN AlertType at ON a.AlertTypeId = at.AlertTypeId
LEFT JOIN ExpedType et ON a.ExpedTypeId = et.ExpedTypeId
LEFT JOIN HistoriqueAlerte h ON a.AlerteId = h.AlerteId
WHERE a.AlerteId IN (@AlerteUrgente, @AlerteInfo, @AlerteMaintenance)
GROUP BY a.AlerteId, a.TitreAlerte, at.AlertType, et.ExpedType, a.DateCreationAlerte
ORDER BY a.AlerteId;

PRINT '';
PRINT 'üìß V√âRIFICATION DES DESTINATAIRES CR√â√âS :';
SELECT 
    h.AlerteId,
    LEFT(a.TitreAlerte, 30) + '...' as Titre,
    u.FullName,
    h.DestinataireEmail,
    h.EtatAlerte,
    CASE WHEN h.RappelSuivant IS NOT NULL THEN 'Oui' ELSE 'Non' END as RappelProgramme
FROM HistoriqueAlerte h
INNER JOIN Users u ON h.DestinataireUserId = u.UserId
INNER JOIN Alerte a ON h.AlerteId = a.AlerteId
WHERE h.AlerteId IN (@AlerteUrgente, @AlerteInfo, @AlerteMaintenance)
ORDER BY h.AlerteId, u.FullName;

PRINT '';
PRINT 'üéØ === D√âMONSTRATION TERMIN√âE === üéØ';
PRINT '';
PRINT 'R√âSULTATS ATTENDUS :';
PRINT '‚úÖ 3 alertes cr√©√©es avec des types diff√©rents';
PRINT '‚úÖ ' + CAST(@UserCount * 3 AS VARCHAR(10)) + ' destinataires cr√©√©s au total (' + CAST(@UserCount AS VARCHAR(10)) + ' par alerte)';
PRINT '‚úÖ Triggers ex√©cut√©s automatiquement';
PRINT '‚úÖ Tentatives d''envoi via API AlertSystem';
PRINT '';
PRINT 'V√âRIFICATIONS √Ä EFFECTUER :';
PRINT '1. üìß V√©rifiez vos emails (Gmail, etc.)';
PRINT '2. üì± V√©rifiez vos messages WhatsApp';
PRINT '3. üñ•Ô∏è  V√©rifiez les notifications Web Push';
PRINT '4. üåê Consultez l''interface : http://localhost:5000/Home/HistoriqueTest';
PRINT '5. üìä V√©rifiez les statistiques dans l''interface web';
PRINT '';
PRINT 'Si vous recevez les 3 alertes par email/WhatsApp, le syst√®me fonctionne parfaitement ! üéâ';
PRINT '';
PRINT 'Alertes cr√©√©es :';
PRINT '- Alerte URGENTE ID : ' + CAST(@AlerteUrgente AS VARCHAR(10)) + ' (avec rappel)';
PRINT '- Alerte INFO ID : ' + CAST(@AlerteInfo AS VARCHAR(10)) + ' (sans rappel)';
PRINT '- Alerte MAINTENANCE ID : ' + CAST(@AlerteMaintenance AS VARCHAR(10)) + ' (notification)';
PRINT '';
PRINT 'üöÄ Le syst√®me d''envoi automatique est op√©rationnel ! üöÄ';
